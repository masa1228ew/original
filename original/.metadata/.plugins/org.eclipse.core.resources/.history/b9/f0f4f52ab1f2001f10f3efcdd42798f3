<!DOCTYPE html>
<html>
	<head>
		<meta charset="UTF-8">
       <meta name="viewport" content="width=device-width, initial-scale=1">
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65" crossorigin="anonymous">
           <link th:href="@{/css/style.css}" rel="stylesheet" >	
		<title>データ編集</title>
	</head>
	<body>
		<div class="wrapper">
			<nav class="navbar navbar-expand-md navbar-light bg-white shadow-sm ">
               <div class="container ">
                   <a class="navbar-brand" th:href="@{/}">                        
                       ロゴ                        
                   </a>                                                                    
               </div>
           </nav>
			<main>
				<div class="container pt-4 pb-5">
					<div class="d-flex justify-content-center">
					<h1>データ編集</h1>
					</div>
					<form method="post" th:action="@{/data/__${datasEditForm.id}__/update}" th:object="${datasEditForm}" enctype="multipart/form-data">
						 <input type="hidden" name="collectionId" th:value="${collectionId}" />
								<div class="form-group row mb-3">
									<div class="col-md-4">
										<label for="name" class="col-form-label text-md-left fw-bold">商品名</label>
									</div>
									<div class="col-md-8">
										<div  th:if="${#fields.hasErrors('name')}" class="text-danger small mb-2"th:errors="*{name}"></div>
										<input type="text" class="form-control"  th:field="*{name}"  required autofocus maxlength="255">
									</div>
								</div>
								
								<div class="form-group row mb-3">
   <div class="form-group row mb-3">
    <div class="col-md-4">
        <label for="categoryId" class="col-form-label text-md-left fw-bold">カテゴリー</label>
    </div>
    <div class="col-md-8">
        <select class="form-control" th:field="*{categoryId}" required>
            <option value="">選択してください</option>
            <option th:each="category : ${categories}" 
                    th:value="${category.id}" 
                    th:text="${category.category}">
            </option>
        </select>
    </div>
</div>

								
								
								
								<div class="form-group row mb-3">
    <div class="col-md-4">
        <label for="price" class="col-form-label text-md-left fw-bold">購入金額</label>
    </div> 
    <div class="col-md-8">
        <div th:if="${#fields.hasErrors('price')}" class="text-danger small mb-2" th:errors="*{price}"></div>
        <input type="number" id="priceInput" class="form-control" th:field="*{price}">
        <input type="hidden" id="priceHidden" name="price" th:value="${datasEditForm.price}">
    </div>                                    
</div>    

<!-- ✅ 未購入のチェックボックス -->
<div class="form-group row mb-3">
    <div class="col-md-4">
        <label>
        <input type="checkbox" th:field="*{notPurchased}"/>
        未購入（価格を未入力にする）
    </label>
    </div>
    <div class="col-md-8">
        <input type="checkbox" id="notPurchased" name="notPurchased"
               th:checked="${datasEditForm.price == null}" onclick="togglePriceInput()">
    </div>
</div>				       
                                   
                                
                                 <div class="form-group d-flex justify-content-center my-4">
									 <button type="submit" class="btn  shadow-sm w-50 btn-color">更新</button>
								 </div> 
								 
								        <div class="d-flex justify-content-center mt-3">
    <a th:href="@{/data/__${collectionId}__}" class="btn btn-secondary w-50">戻る</a>
</div>

         
							
							<div>
								<a href="#" class="samuraitravel-link-danger" data-bs-toggle="modal"
   th:attr="data-bs-target='#deleteDatasModal' + ${datas != null ? datas.id : ''}">削除</a>
							</div>
							</form>
							 <!-- 削除用モーダル -->
                                       <div class="modal fade" th:attr="id='deleteDatasModal' + ${datas.getId()}" tabindex="-1"
     th:attrappend="aria-labelledby='deleteDatasModalLabel' + ${datas.getId()}">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" th:attr="id='deleteDatasModalLabel' + ${datas.getId()}"
                    th:text="${datas.getName() + 'を削除してもよろしいですか？'}"></h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="閉じる"></button>
            </div>
            <div class="modal-footer">
                <form  th:action="@{/data/{id}/delete(id=${datas.getId()})}" th:method="post">
					  <input type="hidden" name="_method" value="DELETE" /> <!-- Hidden input で DELETE を指定 -->
                    <input type="hidden" th:name="${_csrf.parameterName}" th:value="${_csrf.token}" />
                    <button type="submit" class="btn samuraitravel-btn-danger shadow-sm">削除</button>
                </form>
            </div>
        </div>
    </div>
</div>
				</div>
			</main>
		</div><script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
		<script>
			document.addEventListener("DOMContentLoaded", function() {
    document.querySelectorAll(".samuraitravel-link-danger").forEach(function(button) {
        button.addEventListener("click", function(event) {
            event.preventDefault();
            var modalId = this.getAttribute("data-bs-target");
            var modalElement = document.querySelector(modalId);
            if (modalElement) {
                var modal = new bootstrap.Modal(modalElement);
                modal.show();

                // モーダルが閉じられた後に強制的に backdrop を削除
                modalElement.addEventListener('hidden.bs.modal', function () {
                    document.querySelectorAll('.modal-backdrop').forEach(el => el.remove());
                });
            }
        });
    });

    // ×ボタンのイベントを明示的に設定
    document.querySelectorAll(".btn-close").forEach(function(button) {
        button.addEventListener("click", function() {
            var modalElement = button.closest(".modal");
            var modal = bootstrap.Modal.getInstance(modalElement);
            if (modal) {
                modal.hide();
            }
        });
    });
});

		</script>  
		<script>
document.addEventListener("DOMContentLoaded", function() {
    const nameInput = document.querySelector("input[name='name']");
    
    nameInput.addEventListener("input", function() {
        if (this.value.length > 255) {
            this.value = this.value.substring(0, 255); // 255文字を超えたら切り捨て
        }
    });
});

 function togglePriceInput() {
        let checkbox = document.getElementById('notPurchased');
        let priceInput = document.getElementById('priceInput');
        let priceHidden = document.getElementById('priceHidden');

        if (checkbox.checked) {
            priceInput.value = ''; // 表示上は空にする
            priceInput.disabled = true;
            priceHidden.value = 'null'; // 🔽 送信時に "null" を送る
        } else {
            priceInput.disabled = false;
            priceHidden.value = priceInput.value; // 🔽 通常の値を送る
        }
    }
</script>
 <script th:src="@{/js/logout.js}" ></script>
		 <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-kenU1KFdBIe4zVF0s0G1M5b4hcpxyD9F7jL+jjXkk+Q2h455rYXK/7HAuoJl+0I4" crossorigin="anonymous"></script>
	</body>
</html>