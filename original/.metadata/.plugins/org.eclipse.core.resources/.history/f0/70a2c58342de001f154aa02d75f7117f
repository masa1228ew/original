package com.example.origin.service;

import org.springframework.stereotype.Service;

import com.example.origin.entity.Category;
import com.example.origin.entity.Collection;
import com.example.origin.entity.Datas;
import com.example.origin.form.DatasForm;
import com.example.origin.repository.CategoryRepository;
import com.example.origin.repository.CollectionRepository;
import com.example.origin.repository.DatasRepository;

@Service
public class DatasService {

	private final DatasRepository datasRepository;
	private final GenreService genreService;
	private final CollectionRepository collectionRepository;
	private final CategoryRepository categoryRepository;
	
	public DatasService(DatasRepository datasRepository
						,GenreService genreService
						,CollectionRepository collectionRepository
						,CategoryRepository categoryRepository) {
		this.datasRepository = datasRepository;
		this.genreService = genreService;
		this.collectionRepository = collectionRepository;
		this.categoryRepository = categoryRepository;
	}
	
	 public Datas createData(DatasForm datasForm) {
	        // Collectionを取得
	        Collection collection = collectionRepository.findById(datasForm.getCollectionId())
	                .orElseThrow(() -> new IllegalArgumentException("Collection not found with ID: " ));
	        
	        // Categoryを取得
	        Category category = categoryRepository.findById(datasForm.getCategoryId())
	                .orElseThrow(() -> new IllegalArgumentException("Category not found with ID: "));

	        // Datasオブジェクトを作成して設定
	        Datas datas = new Datas();
	        datas.setName(datasForm.getName());
	        datas.setCollection(collection);
	        datas.setCategory(category);
	        datas.setPrice(datasForm.getPrice());

	        // 保存
	        return datasRepository.save(datas);
	    }
	
	
}
